name: Deploy Client with Plugins to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      base_path:
        description: 'Custom base path (e.g., /my-app). Leave empty for auto-detection'
        required: false
        type: string
        default: ''
      include_event_plugin:
        description: 'Include Event Plugin (P2P)'
        required: false
        type: boolean
        default: true
      event_plugin_branch:
        description: 'Event Plugin Branch'
        required: false
        type: string
        default: 'event-plugin-p2p'
      include_wiki_plugin:
        description: 'Include Wiki Plugin'
        required: false
        type: boolean
        default: false
      wiki_plugin_branch:
        description: 'Wiki Plugin Branch'
        required: false
        type: string
        default: 'gun'
      include_chat_plugin:
        description: 'Include Chat Plugin'
        required: false
        type: boolean
        default: false
      chat_plugin_branch:
        description: 'Chat Plugin Branch'
        required: false
        type: string
        default: 'main'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build project
        run: |
          # Set base path for build if provided
          if [[ -n "${{ github.event.inputs.base_path }}" ]]; then
            export BASE_PATH="${{ github.event.inputs.base_path }}"
          elif [[ "${{ github.event.repository.name }}" != *".github.io" ]]; then
            export BASE_PATH="/${{ github.event.repository.name }}"
          fi
          echo "Building with BASE_PATH=${BASE_PATH:-/}"
          pnpm build
        
      # Event Plugin
      - name: Build and include Event Plugin
        if: github.event.inputs.include_event_plugin == 'true' || (github.event_name == 'push' && true)
        run: |
          echo "üì¶ Building Event Plugin..."
          # Clone to a separate directory outside workspace
          cd /tmp
          # Use the same GitHub org as the main repository for plugin discovery
          git clone -b ${{ github.event.inputs.event_plugin_branch || 'event-plugin-p2p' }} \
            https://github.com/${{ github.repository_owner }}/event-plugin.git event-plugin-build || \
          git clone -b ${{ github.event.inputs.event_plugin_branch || 'event-plugin-p2p' }} \
            https://github.com/toplocs/event-plugin.git event-plugin-build
          cd event-plugin-build
          
          # Install and build
          echo "üì¶ Installing plugin dependencies..."
          npm install
          echo "üèóÔ∏è Building plugin..."
          # Set base path for plugin assets
          export PLUGIN_BASE_PATH="/plugins/event-plugin/"
          npm run build-only
          
          # Copy back to main project
          cd ${{ github.workspace }}
          mkdir -p server/dist/views/plugins/event-plugin
          cp -r /tmp/event-plugin-build/dist/* server/dist/views/plugins/event-plugin/
          
          # Cleanup
          rm -rf /tmp/event-plugin-build
          echo "‚úÖ Event Plugin included"
          
      # Wiki Plugin (if needed in future)
      - name: Build and include Wiki Plugin
        if: github.event.inputs.include_wiki_plugin == 'true'
        run: |
          echo "üì¶ Building Wiki Plugin..."
          git clone -b ${{ github.event.inputs.wiki_plugin_branch || 'gun' }} \
            https://github.com/${{ github.repository_owner }}/wiki-plugin.git temp-wiki-plugin || \
          git clone -b ${{ github.event.inputs.wiki_plugin_branch || 'gun' }} \
            https://github.com/toplocs/wiki-plugin.git temp-wiki-plugin
          cd temp-wiki-plugin
          pnpm install --no-frozen-lockfile
          pnpm build
          cd ..
          mkdir -p server/dist/views/plugins/wiki-plugin
          cp -r temp-wiki-plugin/server/views/* server/dist/views/plugins/wiki-plugin/
          echo "‚úÖ Wiki Plugin included"
          
      # Chat Plugin (when ready)
      - name: Build and include Chat Plugin
        if: github.event.inputs.include_chat_plugin == 'true'
        run: |
          echo "üì¶ Building Chat Plugin..."
          # git clone -b ${{ github.event.inputs.chat_plugin_branch || 'main' }} \
          #   https://github.com/toplocs/chat-plugin.git temp-chat-plugin
          # cd temp-chat-plugin
          # pnpm install
          # pnpm build-only
          # cd ..
          # mkdir -p server/dist/views/plugins/chat-plugin
          # cp -r temp-chat-plugin/dist/* server/dist/views/plugins/chat-plugin/
          echo "‚ö†Ô∏è  Chat Plugin not yet implemented"
          
      # Create plugin registry
      - name: Create Plugin Registry
        run: |
          cat > server/dist/views/plugin-registry.js << 'EOF'
          // Auto-generated Plugin Registry
          (function() {
            if (!window.gun) {
              console.warn('Gun not initialized, retrying plugin registration...');
              setTimeout(arguments.callee, 1000);
              return;
            }
            
            const plugins = [];
            
            // Event Plugin
            if (${{ github.event.inputs.include_event_plugin == 'true' || (github.event_name == 'push' && 'true') }}) {
              plugins.push({
                id: 'event-plugin',
                name: 'Events (P2P)',
                description: 'Pure P2P event management for communities',
                url: '/plugins/event-plugin/plugin.js',
                version: '1.0.0',
                author: 'Tribelike Community',
                category: 'social',
                enabled: true,
                icon: 'üìÖ'
              });
            }
            
            // Wiki Plugin
            if (${{ github.event.inputs.include_wiki_plugin == 'true' }}) {
              plugins.push({
                id: 'wiki-plugin',
                name: 'Wiki',
                description: 'Collaborative wiki for communities',
                url: '/plugins/wiki-plugin/plugin.js',
                version: '0.5.0',
                author: 'Tribelike Community',
                category: 'productivity',
                enabled: false,
                icon: 'üìö'
              });
            }
            
            // Register all plugins
            plugins.forEach(plugin => {
              window.gun.get('plugins').get(plugin.id).put(plugin);
              console.log(`‚úÖ Registered plugin: ${plugin.name}`);
            });
            
            console.log(`üì¶ Total plugins registered: ${plugins.length}`);
          })();
          EOF
          
      # Inject plugin registry into index.html
      - name: Inject Plugin Registry
        run: |
          if grep -q "</body>" server/dist/views/index.html; then
            sed -i 's|</body>|<script src="/plugin-registry.js"></script></body>|' server/dist/views/index.html
          fi
          
      # Summary
      - name: Deployment Summary
        run: |
          echo "üöÄ Deployment Summary:"
          echo "===================="
          echo "Main App: ‚úÖ Built"
          if [[ "${{ github.event.inputs.include_event_plugin }}" == "true" ]] || [[ "${{ github.event_name }}" == "push" ]]; then
            echo "Event Plugin: ‚úÖ Included (branch: ${{ github.event.inputs.event_plugin_branch || 'event-plugin-p2p' }})"
          fi
          if [[ "${{ github.event.inputs.include_wiki_plugin }}" == "true" ]]; then
            echo "Wiki Plugin: ‚úÖ Included (branch: ${{ github.event.inputs.wiki_plugin_branch || 'gun' }})"
          fi
          if [[ "${{ github.event.inputs.include_chat_plugin }}" == "true" ]]; then
            echo "Chat Plugin: ‚ö†Ô∏è  Skipped (not implemented, would use branch: ${{ github.event.inputs.chat_plugin_branch || 'main' }})"
          fi
          echo "===================="
          ls -la server/dist/views/plugins/ || echo "No plugins directory"
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./server/dist/views

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Deployment URLs
        run: |
          echo "üåê Deployment Complete!"
          echo "======================"
          if [[ "${{ github.event.repository.name }}" == *".github.io" ]]; then
            # User/Org GitHub Pages site (e.g., username.github.io)
            echo "Main App: https://${{ github.repository_owner }}.github.io/"
            echo "Event Plugin: https://${{ github.repository_owner }}.github.io/plugins/event-plugin/"
          else
            # Project GitHub Pages site
            echo "Main App: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
            echo "Event Plugin: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/plugins/event-plugin/"
          fi
          echo "======================"
          echo ""
          echo "Note: If you have a custom domain configured in GitHub Pages settings,"
          echo "your site will be available at that domain instead."